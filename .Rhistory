)
)
plan
config <- drake_config(plan)
vis_drake_graph(config)
make(plan)
View(irises)
library(drake)
library(dplyr)
library(ggplot2)
create_plot <- function(data) {
ggplot(data, aes(x = Petal.Width, fill = Species)) +
geom_histogram()
}
plan <- drake_plan(
raw_data = readxl::read_excel(file_in("iris.xls")),
data = raw_data %>%
mutate(Species = forcats::fct_inorder(Species)),
hist = create_plot(data),
fit = lm(Sepal.Width ~ Petal.Width + Species, data),
report = rmarkdown::render(
knitr_in("report.Rmd"),
output_file = file_out("report.html"),
quiet = TRUE
)
)
plan
config <- drake_config(plan)
vis_drake_graph(config)
make(plan)
make(plan)
config <- drake_config(plan)
vis_drake_graph(config)
config <- drake_config(plan)
vis_drake_graph(config)
make(plan)
config <- drake_config(plan)
vis_drake_graph(config)
readd(fit)
drake_example("main")
install.packages("downloader")
drake_example("main")
config <- drake_config(plan)
vis_drake_graph(config)
make(plan)
make(plan)
make(plan)
config <- drake_config(plan)
vis_drake_graph(config)
config <- drake_config(plan)
vis_drake_graph(config)
library(drake)
library(dplyr)
library(ggplot2)
create_plot <- function(data) {
ggplot(data, aes(x = Petal.Width, fill = Species)) +
geom_histogram()
}
plan <- drake_plan(
raw_data = readxl::read_excel(file_in("iris.xls")),
data = raw_data %>%
mutate(Species = forcats::fct_inorder(Species)),
hist = create_plot(data),
fit = lm(Sepal.Width ~ Petal.Width + Species, data),
report = rmarkdown::render(
knitr_in("report.Rmd"),
output_file = file_out("report.docx"),
quiet = TRUE
)
)
plan
config <- drake_config(plan)
vis_drake_graph(config)
make(plan)
?make#
make(plan)
config <- drake_config(plan)
vis_drake_graph(config)
x <- 1:10
y <- log(x)
y
knitr::opts_chunk$set(echo = TRUE)
library(rlang)
library(dplyr)
library(knitr)
library(DT)
library(xtable)
library(readr)
library(kableExtra)
studentlong <- read_csv("studentlong.csv")
topscores <- studentlong %>%
group_by(class) %>%
summarise(meanscore=mean(score, na.rm = TRUE)) %>%
arrange(desc(meanscore)) %>%
top_n(n=5, wt=meanscore)
topscores
kable(topscores)
datatable(studentlong,
filter = 'top', options = list(
pageLength = 12, autoWidth = TRUE
))
print(xtable(topscores), comment = TRUE)
dt <- mtcars[1:5, 1:4]
# HTML table
kable(dt, format = "html", caption = "Demo Table") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%#   add_header_above(c(" ", "Group 1" = 2, "Group 2[note]" = 2)) %>%
add_footnote(c("table footnote"))
# LaTeX Table
kable(dt, format = "latex", booktabs = T, caption = "Demo Table") %>%
kable_styling(latex_options = c("striped", "hold_position"),
full_width = F) %>%
add_header_above(c(" ", "Group 1" = 2, "Group 2[note]" = 2)) %>%
add_footnote(c("table footnote"))
print(xtable(topscores), comment = TRUE)
topscores <- studentlong %>%
group_by(class) %>%
summarise(meanscore=round(mean(score, na.rm = TRUE),2)) %>%
arrange(desc(meanscore)) %>%
top_n(n=5, wt=meanscore)
topscores
View(topscores)
library(knitr)
library(kableExtra)
options(knitr.table.format = "latex")
library(rmarkdown)
dt <- mtcars[1:5, 1:6]
library(knitr)
library(kableExtra)
options(knitr.table.format = "latex")
library(rmarkdown)
dt <- mtcars[1:5, 1:6]
library(knitr)
library(kableExtra)
options(knitr.table.format = "latex")
library(rmarkdown)
dt <- mtcars[1:5, 1:6]
kable(head(dt))
kable(head(dt))
head(dt)
kable(dt)
library(knitr)
libray(kable)
library(knitr)
library(kable)
kable(dt)
kable(dt, format = "html")
library(knitr)
library(kableExtra)
library(rmarkdown)
dt <- mtcars[1:5, 1:6]
kable(dt)
library(knitr)
library(kableExtra)
library(rmarkdown)
dt <- mtcars[1:5, 1:6]
kable(dt, format = "latex", booktabs = T)
install.packages("formattable")
install.packages("flextable")
library(flextable)
library(dplyr)
library(knitr)
library(kableExtra)
library(DT)
library(xtable)
library(flextable)
library(formattable)
setwd("N:/Documents")
resultsdf <- read_csv("results.csv")
library(dplyr)
library(readr)
library(knitr)
library(kableExtra)
library(DT)
library(xtable)
library(flextable)
library(formattable)
setwd("N:/Documents")
resultsdf <- read_csv("results.csv")
kable(head(resultsdf), digits = 2, caption="Example Data", booktabs=TRUE)
resultsdf <- resultsdf %>%
rowwise() %>%
mutate(avxm=mean(c(maths,english,history), na.rm = TRUE))
modelone <- lm(resultsdf$avxm~resultsdf$maths)
kable(summary(modelone)$coef,digits = 2)
resultsdf %>%
summary() %>%
kable()
resultsdf %>%
summary() %>%
kable() %>%
kable_styling()
resultsdf %>%
summary() %>%
kable() %>%
kable_styling(bootstrap_options = "bordered")
formattable(resultsdf)
ft <- flextable(resultsdf)
ft <- border_remove( ft )
big_b <- fp_border(color="gray70", width = 3)
library(officer)
source('http://bioconductor.org/biocLite.R')
biocLite('Rgraphviz')
source('~/Documents/timeseries.R')
plot.ts(BoxCox(tseries_h, lambda = 0.5))
print(lambda)
plot.ts(BoxCox(tseries_h, lambda = lambda))
plot(tseries)
tseries_lag1 <- stats::lag(tseries, 1)
head(cbind(tseries, tseries_lag1))
tseries_lag3 <- stats::lag(tseries, 3)
head(cbind(tseries, tseries_lag3))
tseries_lead1 <- stats::lag(tseries, -1)
head(cbind(tseries, tseries_lead1))
tseries_diff1 <- diff(tseries, lag = 1)
tm <- cbind(tseries, tseries_diff1)
head(tm)
plot(tm)
Sys.getenv
Sys.getenv()
setwd("~/")
getwd()
sink(file=!~/rstudioenvs.txt"")
sink(file="~/rstudioenvs.txt")
Sys.getenv()
sink()
# i created a version of the exam results data with a repeated measure indicated by the occurence factor
# you can read it from the web:
repeated <- read.csv("http://www.ucl.ac.uk/~ccaajim/repeated.csv")
# make the between and within variables factors
repeated$occurence<-factor(repeated$occurence, ordered = TRUE)
repeated$class<-factor(repeated$class)
# class is between, occurence is within
# first model: anova with two factor variable IVs, between and within, including interaction
mxan <- aov(repeated$avxm~repeated$class*repeated$occurence)
summary(mxan)
TukeyHSD(mxan)
# linear mixed models - some with 'repeated measure'
# single continuous IV
regmx <- lm(repeated$avxm~repeated$maths)
summary(regmx)
# one continuous IV + between factor
regmxc <- lm(repeated$avxm~repeated$maths+repeated$class)
summary(regmxc)
# one continuous IV + within factor
regmxo <- lm(repeated$avxm~repeated$maths+repeated$occurence)
summary(regmxo)
# one continuous + between + within
regmxco <- lm(repeated$avxm~repeated$maths+repeated$class+repeated$occurence)
summary(regmxco)
# this is the lm version of the anova above.
regcats <- lm(repeated$avxm~repeated$class*repeated$occurence)
summary(regcats)
TukeyHSD(aov(regcats))
repeated <- read.csv("http://www.ucl.ac.uk/~ccaajim/repeated.csv")
View(repeated)
# make the between and within variables factors
repeated$occurence<-factor(repeated$occurence, ordered = TRUE)
repeated$class<-factor(repeated$class)
mxan <- aov(repeated$avxm~repeated$class*repeated$occurence)
summary(mxan)
TukeyHSD(mxan)
regmx <- lm(repeated$avxm~repeated$maths)
summary(regmx)
regmxo <- lm(repeated$avxm~repeated$maths+repeated$occurence)
summary(regmxo)
regmxco <- lm(repeated$avxm~repeated$maths+repeated$class+repeated$occurence)
summary(regmxco)
addinslist:::addinslistAddin()
x <- 1:5
for (i in x)
x <- +=x
x <- 1:5
for (i in x)
x +=x
x <- 1:5
for (i in x)
x <- x+1
x <- 1:5
for (i in x)
x <- x+1
x
x <- 1:5
for (i in x)
res <- x+1
res
x <- 1:5
for (i in x)
res <- x[i]+x[i]
res
x <- 1:5
for (i in x)
x[i]
res <- x[i]+x[i]
res
x <- 1:5
res <- 0
for (i in x)
res <- res+x[i]
res
x <- 1:6
res <- 1
for (i in x)
res <- res*x[i]
res
x <- 1:6
res <- 1
for (i in x)
res <- x[i]*x[i]
res
x <- 1:6
res <- 1
for (i in x)
res <- res*x[i]
res
x <- 1:5
res <- 1
for (i in x)
res <- res*x[i]
res
x <- 1:5
res <- 1
for (i in x)
res <- res*x[i]
res
res
x <- 1:5
res <- 1
for (i in x)
res <- res*x[i]
print(res)
res
x <- 1:5
res <- 1
for (i in x)
print(res)
res <- res*x[i]
res
x <- 1:5
res <- 1
for (i in x)
res <- res*x[i]
x <- 1:5
res <- 1
for (i in x)
res <- res*x[i]
print(res)
print(res)
knit_with_parameters('~/OneDrive/datamangementscriptingstata.Rmd', encoding = 'UTF-8')
source('~/Downloads/correctedscript.R')
source('~/Downloads/correctedscript.R')
source('~/Downloads/correctedscript.R')
View(resdf)
source('~/Downloads/correctedscript.R')
View(resdf)
source('~/Downloads/correctedscript.R')
View(resdf)
View(resdf)
str(df)
str(resdf)
install.packages("stargazer")
library("stargazer")
stargazer(resdf, summary=TRUE, type='html',out = "descriptives.doc", type = "html", summary.stat = c("n","mean","median","min", "max"))
stargazer(resdf, summary=TRUE, type='html',out = "descriptives.doc", summary.stat = c("n","mean","median","min", "max"))
stargazer(resdf, summary=TRUE, type='html', summary.stat = c("n","mean","median","min", "max"))
stargazer(resdf, summary=TRUE, summary.stat = c("n","mean","median","min", "max"))
stargazer(resdf, summary=TRUE, type = 'HTML', summary.stat = c("n","mean","median","min", "max"))
stargazer(resdf, summary=TRUE, type = 'HTML', out= "starz.docx", summary.stat = c("n","mean","median","min", "max"))
stargazer(resdf, summary=TRUE, type = "HTML,", out= "starz.docx", summary.stat = c("n","mean","median","min", "max"))
stargazer(resdf, summary=TRUE, type = "HTML,", out= "starz.docx",
summary.stat = c("n","mean","median","min", "max"), style="HTML")
stargazer(resdf, summary=TRUE, out= "starz.docx",
summary.stat = c("n","mean","median","min", "max"))
mtcars.pca <- prcomp(mtcars[,c(1:7,10,11)], center = TRUE,scale. = TRUE)
summary(mtcars.pca)
str(mtcars.pca)
View(mtcars.pca)
library(devtools)
install_github("vqv/ggbiplot")
install.packages("installr")
library(installr)
updateR()
library(ggbiplot)
library(devtools)
install_github("vqv/ggbiplot")
data(cars)
str(cars)
mean(cars$speed, na.rm=TRUE)
mtcars.pca <- prcomp(mtcars[,c(1:7,10,11)], center = TRUE,scale. = TRUE)
summary(mtcars.pca)
library(ggbiplot)
ggbiplot(mtcars.pca)
data(cars)
str(cars)
mean(cars$speed, na.rm=TRUE)
tosscoin(10)
install.packages("prob")
install.packages("scatterplot3d")
install.packages("ConvergenceConcepts")
library(prob)
library(scatterplot3d)
library(ConvergenceConcepts)
tosscoin(10)
tosscoin(1)
tosscoin(times = 1)
tosscoin(times = 4)
x <- tosscoin(times = 4)
x
table(x[,2:4])
x
x <- as.data.frame(x[,2:4])
x
x <- as.data.frame(x[-1,2:5])
x <- tosscoin(times = 4)
x <- as.data.frame(x[-1,2:5])
x
x <- as.data.frame(x[,2:5])
x
x[2,2]
table(x)
install.packages(c("dplyr", "ggplot2", "Hmisc", "moments", "psych", "readr"))
library(ggplot2)
library(dplyr)
library(readr)
library(moments)
library(psych)
library(Hmisc)
# read the data
resdf<-read_csv("http://www.ucl.ac.uk/~ccaajim/results.csv", col_names = TRUE)
library(readr)
str(resdf)
View(resdf)
# read the data
resdf<-read_csv("http://www.ucl.ac.uk/~ccaajim/results.csv", col_names = TRUE)
# read the data
resdf<-read.csv("http://www.ucl.ac.uk/~ccaajim/results.csv", col_names = TRUE)
library(readr)
# read the data
resdf<-read.csv("http://www.ucl.ac.uk/~ccaajim/results.csv", col_names = TRUE)
source('~/addone.R')
addone(2)
addone(addone(3))
addone(addone(2))
data(mtcars)
modone <- lm(mpg~wt)
summary(modeon)
modone <- lm(mpg~wt)
modone <- lm(data=mtcars, mpg~wt)
summary(modone)
View(modone)
View(mtcars)
modtwo <- lm(data=mtcars, mpg~wt+disp)
summary(modtwo)
matrix(1:9,3,3)
mymatrix <- matrix(1:9,3,3)
mymatrix[8]
mymatrix[2,2]
mymatrix[2,3]
mymatrix[6]
mymatrix[2:3,2:3]
library(learnr)
library(tidyverse)
library(reticulate)
knitr::opts_chunk$set(echo = FALSE)
x<-1:10
xsquare <- x^2
xmat <- rbind(x,xsquare)
xmat[1:2,3:5]
newvector <- 1:100
uppervector <- newvector[>50]
newvector <- 1:100
uppervector <- newvector[newvector>50]
newvector <- 1:100
uppervector <- newvector[newvector>50]
uppervector
newvector <- 1:100
uppervector <- newvector[newvector>50]
uppervector
evenvector <- newvector[(newvector%%2)==0]
newvector <- 1:100
uppervector <- newvector[newvector>50]
uppervector
evenvector <- newvector[(newvector%%2)==0]
evenvector
10%%7
? psych
library(psych)
?psych
resdf <- read_csv("http://www.ucl.ac.uk/~ccaajim/results.csv")
names(resd)
names(resdf)
question("which of the following is *not* the name of a variable in this dataset?",
answer("surname"),
answer("age", correct = TRUE),
answer("gender"),
answer("teacher"),
incorrect = "No, that's definitely in the dataset.",
allow_retry = TRUE,
random_answer_order = TRUE
)
str(resultsdf)
str(resdf)
unlink('Downloads/First-Steps-in-Data-Analysis-with-R-master/First Steps in Data Analysis with R_cache', recursive = TRUE)
unlink('Downloads/First-Steps-in-Data-Analysis-with-R-master/First Steps in Data Analysis with R_cache', recursive = TRUE)
unlink('Downloads/First-Steps-in-Data-Analysis-with-R-master/First Steps in Data Analysis with R_cache', recursive = TRUE)
rmarkdown::shiny_prerendered_clean('Downloads/First-Steps-in-Data-Analysis-with-R-master/First Steps in Data Analysis with R.Rmd')
unlink('Downloads/First-Steps-in-Data-Analysis-with-R-master/First Steps in Data Analysis with R_cache', recursive = TRUE)
rmarkdown::shiny_prerendered_clean('Downloads/First-Steps-in-Data-Analysis-with-R-master/First Steps in Data Analysis with R.Rmd')
unlink('Downloads/First-Steps-in-Data-Analysis-with-R-master/First Steps in Data Analysis with R_cache', recursive = TRUE)
rmarkdown::shiny_prerendered_clean('Downloads/First-Steps-in-Data-Analysis-with-R-master/First Steps in Data Analysis with R.Rmd')
setwd("~/Downloads/First-Steps-in-Data-Analysis-with-R-master/FirstStepsInDataAnalysis")
setwd("~/Downloads/First-Steps-in-Data-Analysis-with-R-master/FirstStepsInDataAnalysis")
